C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TIMER1
OBJECT MODULE PLACED IN timer1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE timer1.c DEBUG OBJECTEXTEND

stmt level    source

   1                                   #include <STC12C5A.h>
   2          #include <absacc.h>
   3          #include <intrins.h>
   4          #include <math.h>
   5          #include <string.h>
   6          
   7           
   8          #define uint unsigned int
   9          #define uchar unsigned char
  10          #define uchar unsigned char     
  11          #define uint unsigned int
  12          #define ulong unsigned long
  13          
  14          
  15          
  16          void sendbyte(uchar a);
  17          void init_timer0();
  18          
  19          sbit lcd_wr=P3^2;
  20          sbit lcd_rd=P3^3;
  21          sbit lcd_cs=P3^4;
  22          sbit lcd_a0=P3^6;
  23          
  24          //sbit lcd_wr=P3^3;
  25          //sbit lcd_rd=P3^4;
  26          //sbit lcd_cs=P3^5;
  27          //sbit lcd_a0=P3^6;
  28            
  29          sbit    LED=P1^3;
  30          
  31          extern  bit  dis_all;
  32          extern  bit  dis_fresh;
  33          extern struct date
  34          {
  35          unsigned char sec;
  36          unsigned char hsec;
  37          }timer1a,timer1b,timer2a,timer2b,timer3a,timer3b,timer4a,timer4b;
  38          uint clrdat;
  39          
  40          
  41          
  42          uchar code charA[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03,0x07,0x07,0x07,0x0E,
  43                                 0x0E,0x0E,0x0C,0x1F,0x1F,0x1C,0x38,0x38,0x38,0x78,0x70,0x00,0x00,0x00,0x00,0x00,
  44                                 0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xE0,0xE0,0x60,0x70,0x70,0x70,0x38,
  45                                 0x38,0x38,0x18,0xFC,0xFC,0x1C,0x0E,0x0E,0x0E,0x0F,0x07,0x00,0x00,0x00,0x00,0x00};/*
             -"A",0*/
  46          
  47          
  48          uchar code charB[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x3F,
  49                                 0x3F,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x3F,0x3F,0x00,0x00,0x00,0x00,0x00,
  50                                 0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xF0,0x38,0x1C,0x1C,0x1C,0x1C,0x1C,0x38,0xF0,
  51                                 0xF0,0x3C,0x1C,0x0E,0x0E,0x0E,0x0E,0x1E,0x3C,0xF8,0xE0,0x00,0x00,0x00,0x00,0x00};/*
             -"B",0*/
  52          
  53          uchar code charT[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 2   

  54                                 0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
  55                                 0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFE,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
  56                                 0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00};/*
             -"T",0*/
  57          
  58          /*
  59          uchar code hz1[ ]=    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x00,0x00,0x00,
  60                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  61                                 0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  62                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFE,0x00,0x00,0x00,
  63                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"一",0*/
  64          
  65          
  66          /*
  67          uchar code hz2[ ]=     {0x00,0x00,0x03,0x03,0x07,0x06,0x06,0x0C,0x0C,0x1C,0x1C,0x34,0x74,0x24,0x04,0x04,
  68                                  0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,
  69                                  0x0C,0x0D,0x3F,0xFC,0x86,0x06,0x06,0x07,0x03,0x03,0x01,0x01,0x00,0x00,0x00,0x00,
  70                                  0x00,0x00,0x00,0x40,0xE0,0x70,0x20,0x00,0x08,0xFC,0xC0,0x00,0x00,0x00,0x00,0x00,
  71                                  0x00,0x00,0x80,0xCE,0xEC,0x7C,0x3C,0x00};/*"代",0*/
  72          
  73          uchar code hz1[ ]=        {0x00,0x00,0x00,0x08,0x07,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,
  74                                 0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x0C,0x0C,0x00,
  75                                                     0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x1F,0x10,
  76                                                     0x10,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77                                                     0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x06,0x0F,0xF0,0x00,0x00,0x08,0xFC,0x08,
  78                                 0x08,0x08,0x08,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
  79                                                     0x00,0x00,0x00,0x10,0xF8,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,
  80                                                     0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0xF0,0xE0,0x40,0x00};/*"同",0*//* (32 
             -X 32 , 宋体 )*/
  81          
  82          uchar code hz2[ ]=        {0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x3F,0x00,0x00,
  83                                 0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x06,0x0C,0x18,0x00,0x00,0x00,0x00,0x1F,0x00,
  84                                                     0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,0x01,0x00,
  85                                                     0x00,0x40,0xF0,0xC0,0x80,0x00,0x00,0x00,0x01,0x00,0x01,0x07,0x1C,0xE0,0x00,0x00,
  86                                                     0x00,0x00,0x80,0xC0,0x80,0x80,0x80,0xFF,0x80,0x80,0x80,0x80,0x80,0xFF,0x00,0xC0,
  87                                 0x80,0x80,0x80,0x80,0x81,0x83,0x87,0x8E,0x18,0x70,0xC0,0x80,0x00,0x00,0x00,0x00,
  88                                                     0x00,0x00,0x00,0x00,0x00,0x40,0xE0,0xF0,0x00,0x00,0x00,0x00,0x18,0xFC,0x00,0x00,
  89                                                     0x00,0x20,0x70,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"步",0*//* (32 
             -X 32 , 宋体 )*/
  90          
  91          uchar code hz3[ ]=    {0x00,0x00,0x02,0x03,0x03,0x06,0x06,0x04,0x0F,0x0C,0x08,0x18,0x1F,0x23,0x43,0x43,
  92                                 0x03,0x03,0x3F,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,
  93                                                     0x00,0x00,0x00,0x80,0x00,0x00,0x30,0x38,0xC7,0x00,0x00,0x20,0xF0,0x01,0x03,0x02,
  94                                                     0x04,0x38,0xF8,0x00,0x00,0x00,0x00,0x00,0x30,0x60,0xC0,0x80,0x03,0x06,0x18,0x00,
  95                                                     0x00,0x00,0x20,0x18,0x0C,0x0E,0x04,0x00,0xFF,0x00,0x60,0xE0,0xC0,0x80,0x00,0x40,
  96                                 0x40,0x41,0x21,0x21,0x33,0x17,0x1E,0x0C,0x1E,0x37,0x63,0xC1,0x00,0x00,0x00,0x00,
  97                                                     0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0xC0,0x00,0xC0,0x70,0x38,0x18,0x58,0xE0,
  98                                                     0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x7E,0x38,0x00,0x00};/*"铰",0*//* (32 
             -X 32 , 宋体 )*/
  99          
 100          
 101          uchar code hz4[ ]=     {0x00,0x00,0x00,0x07,0x07,0x06,0x04,0x0C,0x0F,0x08,0x18,0x10,0x20,0x3F,0x42,0x02,
 102                                  0x02,0x02,0x3F,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x07,0x02,0x00,0x00,0x00,
 103                                                          0x00,0x00,0x00,0x00,0x00,0x08,0x24,0x76,0x87,0x03,0x02,0x40,0xE0,0x00,0x02,0x03,
 104                                                          0x3F,0x22,0xF2,0x02,0x02,0x02,0x02,0x02,0x12,0x62,0x82,0x05,0x18,0x30,0x10,0x00,
 105                                                          0x00,0x00,0x04,0x07,0x06,0x06,0x0C,0xFF,0x08,0x18,0x1A,0x13,0x33,0x33,0x63,0xFF,
 106                                  0x03,0x03,0x03,0x03,0x03,0x7F,0x03,0x03,0x03,0x03,0x03,0x03,0xE0,0x3F,0x07,0x00,
 107                                                          0x00,0x00,0x00,0x00,0x00,0x00,0x18,0xFC,0x00,0x00,0x00,0x80,0x00,0x00,0x18,0xE0,
 108                                                          0x00,0x00,0x00,0x08,0x1C,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xF8,0x00};/*"链",0*//* (32 X 
             -32 , 宋体 )*/
 109          
 110          
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 3   

 111          
 112          uchar code hz5[ ]=      {0x00,0x00,0x00,0x08,0x06,0x07,0x03,0x02,0x00,0x00,0x30,0x18,0x1C,0x0C,0x09,0x01,
 113                                   0x01,0x01,0x02,0x02,0x06,0x6E,0x1C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x04,0x01,0x00,
 114                                                           0x00,0x00,0x00,0x00,0x3F,0x30,0x30,0x30,0x30,0x33,0x33,0xB3,0xB3,0xB3,0x33,0x33,
 115                                                           0x33,0x32,0x32,0x32,0x32,0x36,0x26,0x05,0x0C,0x08,0x18,0x30,0x60,0xC0,0x00,0x00,
 116                                                           0x00,0x00,0x00,0x00,0xF0,0x30,0x20,0x23,0x23,0x23,0x23,0x21,0x21,0x21,0x21,0x21,
 117                                   0x31,0x31,0x31,0x31,0x33,0x23,0x03,0x03,0x80,0x40,0x60,0x30,0x31,0x10,0x00,0x00,
 118                                                           0x00,0x00,0x00,0x18,0x18,0x10,0x10,0x10,0x90,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
 119                                                           0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0xF0,0x70,0x20,0x00}; /*"测",0*/ /* (32
             - X 32 , 宋体 )*/
 120          
 121          
 122          uchar code hz6[ ]=           {0x00,0x00,0x00,0x00,0x08,0x0C,0x07,0x03,0x03,0x01,0x00,0x00,0x00,0x01,0x7F,0x03,
 123                                    0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x01,0x00,0x00,
 124                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x1F,0x00,0x00,0x00,0x80,0x00,
 125                                                            0x0F,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x30,0x61,0xDF,0x8E,0x80,0x00,0x00,0x00,
 126                                                            0x00,0x00,0x00,0x06,0x07,0x06,0x06,0x06,0x06,0x06,0xFF,0x06,0x06,0x06,0x06,0x1E,
 127                                    0xE2,0x82,0x83,0x83,0x81,0x81,0x81,0x80,0x98,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,
 128                                                            0x00,0x00,0x00,0x00,0xC0,0x60,0x30,0x30,0x08,0x1C,0xE0,0x00,0x00,0x00,0x00,0x00,
 129                                                            0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x84,0xC4,0x64,0x64,0x34,0x1C,0x0C,0x04,0x00}; /*"试",0*/ /* (3
             -2 X 32 , 宋体 )*/
 130          
 131          
 132          uchar code hz7[ ]=           {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x07,0x05,0x09,0x09,
 133                                    0x11,0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
 134                                                            0x00,0x00,0x40,0x70,0xE0,0xC0,0xC0,0x80,0x80,0x04,0x02,0x82,0x82,0x01,0x01,0x01,
 135                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x81,0x83,0x8C,0x98,0x60,0x00,
 136                                                            0x00,0x00,0x00,0x40,0x60,0x30,0x30,0x18,0x18,0x18,0x00,0x00,0x01,0x01,0x01,0x83,
 137                                    0x83,0xC6,0x46,0x6C,0x2C,0x38,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00,0x00,0x00,0x00,
 138                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0xF0,0xE0,0xC0,0xC0,0x80,0x80,0x00,0x00,
 139                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0x7E,0x38,0x00,0x00};/*"仪",0*//* (32 
             -X 32 , 宋体 )*/
 140          
 141          
 142          
 143          
 144          
 145          uchar code char1[ ]=    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 146                                   0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x03,0x1F,0x00,0x00,0x00,0x00,0x00,
 147                                                           0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
 148                                                           0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xE0,0xFC,0x00,0x00,0x00,0x00,0x00};/*"1",0*/ /* (16 X
             - 32 , 宋体, 加粗 )*/
 149          
 150          
 151          uchar code char2[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x0C,0x18,0x30,0x30,0x38,0x38,0x00,0x00,0x00,
 152                                    0x00,0x00,0x00,0x01,0x03,0x06,0x0C,0x18,0x30,0x3F,0x3F,0x00,0x00,0x00,0x00,0x00,
 153                                                            0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x3C,0x1C,0x0E,0x0E,0x0E,0x0E,0x0E,0x1C,0x18,
 154                                                            0x30,0x60,0xC0,0x80,0x00,0x06,0x06,0x06,0x0E,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00};/*"2",0*//* (16 X
             - 32 , 宋体, 加粗 )*/
 155          
 156          
 157          uchar code char3[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1C,0x38,0x38,0x38,0x38,0x00,0x00,0x00,0x03,
 158                                    0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x38,0x38,0x1C,0x07,0x00,0x00,0x00,0x00,0x00,
 159                                                            0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x78,0x38,0x1C,0x1C,0x1C,0x1C,0x38,0x70,0xE0,
 160                                                            0x78,0x1C,0x0C,0x0E,0x0E,0x0E,0x0E,0x0C,0x1C,0x38,0xE0,0x00,0x00,0x00,0x00,0x00};/*"3",0*/
 161          
 162          
 163          uchar code char4[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x03,0x06,0x0E,0x0C,0x1C,
 164                                   0x18,0x30,0x70,0x7F,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 165                                   0x00,0x00,0x00,0x00,0x00,0x00,0x70,0xF0,0xF0,0xF0,0xF0,0x70,0x70,0x70,0x70,0x70,
 166                                   0x70,0x70,0x70,0xFE,0xFE,0x70,0x70,0x70,0x70,0x70,0x70,0x00,0x00,0x00,0x00,0x00};
             -/*"4",0*/
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 4   

 167          
 168          
 169          
 170          
 171          
 172          
 173          
 174          
 175          
 176          void delayms(uchar ms)
 177               { uchar count,i;
 178   1             _nop_();
 179   1             _nop_();
 180   1             _nop_();
 181   1             for(i=ms;i>0;i--)
 182   1               { for(count=0;count<=58;count++) {;}
 183   2                 _nop_();
 184   2               }
 185   1            }
 186          
 187                  void WriteCommand(uchar Command)   //send command    
 188                  {   
 189   1                  lcd_wr = 1;                   // init all control signal    
 190   1                  lcd_rd = 1;   
 191   1                  lcd_a0  = 1;                // for command    
 192   1                  //P2 = Command; 
 193   1                      sendbyte(Command) ;  
 194   1                  lcd_cs = 0;                // enable the access    
 195   1                  _nop_();   
 196   1                  lcd_wr = 0;   
 197   1                  _nop_();   
 198   1                  _nop_();   
 199   1                  lcd_wr = 1;   
 200   1                  _nop_();   
 201   1                  lcd_cs = 1;                // disable the access    
 202   1                  delayms(1);   
 203   1              }   
 204                     
 205                     
 206                     
 207                  void WriteData(uchar DData)    //send display data    
 208                  {   
 209   1                  lcd_wr = 1;                // init all control signal    
 210   1                  lcd_rd = 1;   
 211   1                  lcd_a0  = 0;                // for diaplay data    
 212   1                  //P2 = DData; 
 213   1                      sendbyte(DData);  
 214   1                  lcd_cs = 0;                // enable the access    
 215   1                  _nop_();   
 216   1                  lcd_wr = 0;   
 217   1                  _nop_();   
 218   1                  _nop_();   
 219   1                  lcd_wr = 1;   
 220   1                  _nop_();   
 221   1                  lcd_cs = 1;                // disable the access    
 222   1                  _nop_();   
 223   1                  _nop_();   
 224   1              }   
 225          
 226          
 227          void LCD_Init(void)
 228          {
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 5   

 229   1      WriteCommand(0x40);
 230   1         WriteData(0x30);
 231   1         WriteData(0x87);
 232   1         WriteData(0x07);
 233   1         WriteData(0x27); 
 234   1         WriteData(0x32);     
 235   1         WriteData(0xef);
 236   1         WriteData(0x28); 
 237   1         WriteData(0x00);
 238   1      
 239   1       WriteCommand(0x44);
 240   1         WriteData(0x00);
 241   1         WriteData(0x00);
 242   1         WriteData(0xf0);
 243   1         WriteData(0xb0); 
 244   1         WriteData(0x04);     
 245   1         WriteData(0xf0);
 246   1         WriteData(0x00); 
 247   1         WriteData(0x00);
 248   1         WriteData(0x00); 
 249   1         WriteData(0x00);
 250   1      
 251   1      WriteCommand(0x5d);
 252   1         WriteData(0x07);
 253   1         WriteData(0x07);
 254   1      
 255   1      WriteCommand(0x4f);
 256   1      
 257   1      WriteCommand(0x5a);
 258   1         WriteData(0x01);
 259   1      
 260   1      WriteCommand(0x5b);
 261   1         WriteData(0x05);
 262   1      
 263   1      //WriteCommand(0x60);
 264   1         //WriteData(0x01);
 265   1      
 266   1      WriteCommand(0x46);
 267   1         WriteData(0x00);
 268   1         WriteData(0x00);
 269   1      
 270   1      WriteCommand(0x58);
 271   1         WriteData(0x00);
 272   1      
 273   1      WriteCommand(0x59);
 274   1         WriteData(0x04);
 275   1      }
 276          
 277          
 278          void LCD_Clear(uchar dat)
 279          {
 280   1       unsigned int i;
 281   1       unsigned int j;
 282   1       for(i=0;i<40;i++)
 283   1       {
 284   2       WriteCommand(0x46);
 285   2         WriteData(i);
 286   2         WriteData(0);
 287   2       WriteCommand(0x42);
 288   2       for(j=0;j<240;j++)
 289   2       {WriteData(dat);}
 290   2        }
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 6   

 291   1      }
 292          
 293          void LCD_Clear3(uchar dat)
 294          {
 295   1       unsigned int i;
 296   1       unsigned int j;
 297   1       for(i=0;i<40;i++)
 298   1       {
 299   2       WriteCommand(0x46);
 300   2         WriteData(i);
 301   2         WriteData(0x1b);
 302   2       WriteCommand(0x42);
 303   2       for(j=0;j<50;j++)
 304   2       {WriteData(dat);}
 305   2        }
 306   1      }
 307          
 308          
 309          void LCD_Clear4(uchar dat)
 310          {
 311   1       unsigned int i;
 312   1       unsigned int j;
 313   1       for(i=4;i<40;i++)
 314   1       {
 315   2       WriteCommand(0x46);
 316   2         WriteData(i);
 317   2         WriteData(0x0f);
 318   2       WriteCommand(0x42);
 319   2       for(j=0;j<50;j++)
 320   2       {WriteData(dat);}
 321   2        }
 322   1      }
 323          
 324          
 325          
 326          
 327          
 328          
 329          
 330          void LCD_Write32x32Char(uchar addx, uchar addy, uchar code *DData)
 331          {
 332   1       unsigned int i,j;
 333   1       unsigned int tmp=0;
 334   1       unsigned int k=0;
 335   1       for(i=addx;i<addx+4;i++)
 336   1       {
 337   2       WriteCommand(0x46);
 338   2         WriteData(i);
 339   2         WriteData(addy);
 340   2       WriteCommand(0x42);
 341   2       for(j=0+k*32;j<32+k*32;j++)
 342   2       {WriteData(DData[tmp+j]);}
 343   2       k++;
 344   2        }
 345   1      }
 346          
 347          
 348          
 349          
 350          void LCD_Write32x16Char(uchar addx, uchar addy, uchar code *DData)
 351          {
 352   1       unsigned int i,j;
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 7   

 353   1       unsigned int tmp=0;
 354   1       unsigned int k=0;
 355   1       for(i=addx;i<addx+2;i++)
 356   1       {
 357   2       WriteCommand(0x46);
 358   2         WriteData(i);
 359   2         WriteData(addy);
 360   2       WriteCommand(0x42);
 361   2       for(j=0+k*32;j<32+k*32;j++)
 362   2       {WriteData(DData[tmp+j]);}
 363   2       k++;
 364   2        }
 365   1      }
 366          
 367          
 368           
 369          void LCD_Write32x16Char1(uchar addx, uchar addy, uchar code *DData, uchar m)
 370          {unsigned int i,j;
 371   1       unsigned int tmp=m*64;
 372   1       unsigned int k=0;
 373   1       for(i=addx;i<addx+2;i++)
 374   1       {
 375   2       WriteCommand(0x46);
 376   2         WriteData(i);
 377   2         WriteData(addy);
 378   2       WriteCommand(0x42);
 379   2       for(j=0+k*32;j<32+k*32;j++)
 380   2       {WriteData(DData[tmp+j]);}
 381   2       k++;
 382   2        }
 383   1      }
 384          
 385           void init_timer1()
 386          {
 387   1         P4SW=0xff;
 388   1         TMOD|=0X10;
 389   1         TH1=0x15;                            //如果时间要完全精确，需用12MHZ的晶振
 390   1         TL1=0xA0;
 391   1         EA=1;
 392   1         ET1=1;
 393   1         TR1=1;
 394   1      }
 395          
 396          
 397          void   LCD_Char_display(void)
 398                 {
 399   1      
 400   1         WriteCommand(0x46);
 401   1         WriteData(0x00);
 402   1         WriteData(0x00);
 403   1      
 404   1         LCD_Write32x32Char(107,1,hz1);
 405   1         LCD_Write32x32Char(112,1,hz2);
 406   1         LCD_Write32x32Char(117,1,hz3);
 407   1         LCD_Write32x32Char(122,1,hz4);
 408   1         LCD_Write32x32Char(127,1,hz5);
 409   1         LCD_Write32x32Char(132,1,hz6);
 410   1         LCD_Write32x32Char(137,1,hz7);
 411   1      
 412   1      
 413   1         LCD_Write32x16Char(115,6,charA); 
 414   1         LCD_Write32x16Char(135,6,charB);
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 8   

 415   1      
 416   1      
 417   1         LCD_Write32x16Char(225,11,char1);
 418   1         LCD_Write32x16Char(33,18,char2);
 419   1         LCD_Write32x16Char(97,24,char3);
 420   1         LCD_Write32x16Char(161,30,char4);
 421   1         
 422   1                      /*
 423   1              LCD_Write32x16Char1(232,11,numb,timer1a.sec/10);
 424   1              LCD_Write32x16Char1(234,11,numb,timer1a.sec%10);
 425   1              LCD_Write32x16Char1(236,11,numb,timer1a.hsec/10);
 426   1              //LCD_Write16x8Char(48,13,dot);
 427   1                      LCD_Write32x16Char1(238,11,numb,10);
 428   1              LCD_Write32x16Char1(240,11,numb,timer1a.hsec%10);
 429   1                       
 430   1              LCD_Write32x16Char1(250,11,numb,timer1b.sec/10);
 431   1              LCD_Write32x16Char1(252,11,numb,timer1b.sec%10);
 432   1              LCD_Write32x16Char1(254,11,numb,timer1b.hsec/10);
 433   1              //LCD_Write16x8Char(63,13,dot);
 434   1                      LCD_Write32x16Char1(0,12,numb,10);
 435   1              LCD_Write32x16Char1(2,12,numb,timer1b.hsec%10);
 436   1      
 437   1      
 438   1                      LCD_Write32x16Char1(40,18,numb,timer2a.sec/10);
 439   1              LCD_Write32x16Char1(42,18,numb,timer2a.sec%10);
 440   1              LCD_Write32x16Char1(44,18,numb,timer2a.hsec/10);
 441   1              //LCD_Write16x8Char(136,20,dot);
 442   1                      LCD_Write32x16Char1(46,18,numb,10);
 443   1              LCD_Write32x16Char1(48,18,numb,timer2a.hsec%10);
 444   1                      
 445   1                      LCD_Write32x16Char1(58,18,numb,timer2b.sec/10);
 446   1              LCD_Write32x16Char1(60,18,numb,timer2b.sec%10);
 447   1              LCD_Write32x16Char1(62,18,numb,timer2b.hsec/10);
 448   1              //LCD_Write16x8Char(151,20,dot);
 449   1                       LCD_Write32x16Char1(64,18,numb,10);
 450   1              LCD_Write32x16Char1(66,18,numb,timer2b.hsec%10);
 451   1      
 452   1      
 453   1      
 454   1                  LCD_Write32x16Char1(104,24,numb,timer3a.sec/10);
 455   1              LCD_Write32x16Char1(106,24,numb,timer3a.sec%10);
 456   1              LCD_Write32x16Char1(108,24,numb,timer3a.hsec/10);
 457   1              //LCD_Write16x8Char(8,28,dot);
 458   1                      LCD_Write32x16Char1(110,24,numb,10);
 459   1              LCD_Write32x16Char1(112,24,numb,timer3a.hsec%10);
 460   1                      
 461   1                      LCD_Write32x16Char1(122,24,numb,timer3b.sec/10);
 462   1              LCD_Write32x16Char1(124,24,numb,timer3b.sec%10);
 463   1              LCD_Write32x16Char1(126,24,numb,timer3b.hsec/10);
 464   1                      LCD_Write32x16Char1(128,24,numb,10);
 465   1              LCD_Write32x16Char1(130,24,numb,timer3b.hsec%10);
 466   1      
 467   1      
 468   1                      LCD_Write32x16Char1(168,30,numb,timer4a.sec/10);
 469   1              LCD_Write32x16Char1(170,30,numb,timer4a.sec%10);
 470   1              LCD_Write32x16Char1(172,30,numb,timer4a.hsec/10);
 471   1              //LCD_Write16x8Char(8,28,dot);
 472   1                      LCD_Write32x16Char1(174,30,numb,10);
 473   1              LCD_Write32x16Char1(176,30,numb,timer4a.hsec%10);
 474   1      
 475   1                      LCD_Write32x16Char1(186,30,numb,timer4b.sec/10);
 476   1              LCD_Write32x16Char1(188,30,numb,timer4b.sec%10);
C51 COMPILER V7.06   TIMER1                                                                03/31/2014 11:04:41 PAGE 9   

 477   1              LCD_Write32x16Char1(190,30,numb,timer4b.hsec/10);
 478   1                      LCD_Write32x16Char1(192,30,numb,10);
 479   1              LCD_Write32x16Char1(194,30,numb,timer4b.hsec%10);
 480   1                      */
 481   1      
 482   1         WriteCommand(0x46);
 483   1         WriteData(0x10);
 484   1         WriteData(0x26);     
 485   1         
 486   1                
 487   1                }
 488          
 489          void timer1() interrupt 3 using 2
 490          {
 491   1      /******************刷新显示*****************************/  
 492   1         CLK_DIV=0X00;
 493   1         TH1=0x15;                            //如果时间要完全精确，需用12MHZ的晶振
 494   1         TL1=0xA0;
 495   1      /*******************如果全显示标志为1，所有显示刷新并清屏***********/
 496   1         if(dis_all)
 497   1         {
 498   2         TR1=0;
 499   2         ET1=0;
 500   2         LCD_Clear(0x00);
 501   2         LCD_Clear(0x00);
 502   2         LCD_Char_display();
 503   2         LCD_Char_display();
 504   2         dis_all=0;
 505   2         dis_fresh=1;   
 506   2         TR0=1;
 507   2         }
 508   1      
 509   1         
 510   1        } 
 511             


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1189    ----
   CONSTANT SIZE    =   1344    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
