C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TIMER1
OBJECT MODULE PLACED IN timer1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE timer1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1                                   #include <STC12C5A.h>
   2          #include <absacc.h>
   3          #include <intrins.h>
   4          #include <math.h>
   5          #include <string.h>
   6          
   7           
   8          #define uint unsigned int
   9          #define uchar unsigned char
  10          #define uchar unsigned char     
  11          #define uint unsigned int
  12          #define ulong unsigned long
  13          
  14          
  15          
  16          void sendbyte(uchar a);
  17          void init_timer0();
  18          
  19          sbit lcd_wr=P3^2;
  20          sbit lcd_rd=P3^3;
  21          sbit lcd_cs=P3^4;
  22          sbit lcd_a0=P3^6;
  23          
  24          //sbit lcd_wr=P3^3;
  25          //sbit lcd_rd=P3^4;
  26          //sbit lcd_cs=P3^5;
  27          //sbit lcd_a0=P3^6;
  28            
  29          sbit    LED=P1^3;
  30          
  31          extern  bit  dis_all;
  32          extern  bit  dis_fresh;
  33          
  34          uint clrdat;
  35          
  36          
  37          
  38          uchar code charA[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x03,0x07,0x07,0x07,0x0E,
  39                                 0x0E,0x0E,0x0C,0x1F,0x1F,0x1C,0x38,0x38,0x38,0x78,0x70,0x00,0x00,0x00,0x00,0x00,
  40                                 0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xE0,0xE0,0x60,0x70,0x70,0x70,0x38,
  41                                 0x38,0x38,0x18,0xFC,0xFC,0x1C,0x0E,0x0E,0x0E,0x0F,0x07,0x00,0x00,0x00,0x00,0x00};/*
             -"A",0*/
  42          
  43          
  44          uchar code charB[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x3F,
  45                                 0x3F,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x38,0x3F,0x3F,0x00,0x00,0x00,0x00,0x00,
  46                                 0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xF0,0x38,0x1C,0x1C,0x1C,0x1C,0x1C,0x38,0xF0,
  47                                 0xF0,0x3C,0x1C,0x0E,0x0E,0x0E,0x0E,0x1E,0x3C,0xF8,0xE0,0x00,0x00,0x00,0x00,0x00};/*
             -"B",0*/
  48          
  49          uchar code charT[ ]=  {0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  50                                 0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
  51                                 0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFE,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
  52                                 0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00};/*
             -"T",0*/
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 2   

  53          
  54          /*
  55          uchar code hz1[ ]=    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x3F,0x00,0x00,0x00,
  56                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  57                                 0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  58                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFE,0x00,0x00,0x00,
  59                                 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"一",0*/
  60          
  61          
  62          /*
  63          uchar code hz2[ ]=     {0x00,0x00,0x03,0x03,0x07,0x06,0x06,0x0C,0x0C,0x1C,0x1C,0x34,0x74,0x24,0x04,0x04,
  64                                  0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,
  65                                  0x0C,0x0D,0x3F,0xFC,0x86,0x06,0x06,0x07,0x03,0x03,0x01,0x01,0x00,0x00,0x00,0x00,
  66                                  0x00,0x00,0x00,0x40,0xE0,0x70,0x20,0x00,0x08,0xFC,0xC0,0x00,0x00,0x00,0x00,0x00,
  67                                  0x00,0x00,0x80,0xCE,0xEC,0x7C,0x3C,0x00};/*"代",0*/
  68          
  69          uchar code hz1[ ]=        {0x00,0x00,0x00,0x08,0x07,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,
  70                                 0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x0C,0x0C,0x00,
  71                                                     0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x1F,0x10,
  72                                                     0x10,0x10,0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  73                                                     0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x06,0x0F,0xF0,0x00,0x00,0x08,0xFC,0x08,
  74                                 0x08,0x08,0x08,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
  75                                                     0x00,0x00,0x00,0x10,0xF8,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,
  76                                                     0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0xF0,0xE0,0x40,0x00};/*"同",0*//* (32 
             -X 32 , 宋体 )*/
  77          
  78          uchar code hz2[ ]=        {0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x3F,0x00,0x00,
  79                                 0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x06,0x0C,0x18,0x00,0x00,0x00,0x00,0x1F,0x00,
  80                                                     0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,0x01,0x00,
  81                                                     0x00,0x40,0xF0,0xC0,0x80,0x00,0x00,0x00,0x01,0x00,0x01,0x07,0x1C,0xE0,0x00,0x00,
  82                                                     0x00,0x00,0x80,0xC0,0x80,0x80,0x80,0xFF,0x80,0x80,0x80,0x80,0x80,0xFF,0x00,0xC0,
  83                                 0x80,0x80,0x80,0x80,0x81,0x83,0x87,0x8E,0x18,0x70,0xC0,0x80,0x00,0x00,0x00,0x00,
  84                                                     0x00,0x00,0x00,0x00,0x00,0x40,0xE0,0xF0,0x00,0x00,0x00,0x00,0x18,0xFC,0x00,0x00,
  85                                                     0x00,0x20,0x70,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};/*"步",0*//* (32 
             -X 32 , 宋体 )*/
  86          
  87          uchar code hz3[ ]=    {0x00,0x00,0x02,0x03,0x03,0x06,0x06,0x04,0x0F,0x0C,0x08,0x18,0x1F,0x23,0x43,0x43,
  88                                 0x03,0x03,0x3F,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x00,0x00,0x00,
  89                                                     0x00,0x00,0x00,0x80,0x00,0x00,0x30,0x38,0xC7,0x00,0x00,0x20,0xF0,0x01,0x03,0x02,
  90                                                     0x04,0x38,0xF8,0x00,0x00,0x00,0x00,0x00,0x30,0x60,0xC0,0x80,0x03,0x06,0x18,0x00,
  91                                                     0x00,0x00,0x20,0x18,0x0C,0x0E,0x04,0x00,0xFF,0x00,0x60,0xE0,0xC0,0x80,0x00,0x40,
  92                                 0x40,0x41,0x21,0x21,0x33,0x17,0x1E,0x0C,0x1E,0x37,0x63,0xC1,0x00,0x00,0x00,0x00,
  93                                                     0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3C,0xC0,0x00,0xC0,0x70,0x38,0x18,0x58,0xE0,
  94                                                     0xC0,0xC0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x7E,0x38,0x00,0x00};/*"铰",0*//* (32 
             -X 32 , 宋体 )*/
  95          
  96          
  97          uchar code hz4[ ]=     {0x00,0x00,0x00,0x07,0x07,0x06,0x04,0x0C,0x0F,0x08,0x18,0x10,0x20,0x3F,0x42,0x02,
  98                                  0x02,0x02,0x3F,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x07,0x02,0x00,0x00,0x00,
  99                                                          0x00,0x00,0x00,0x00,0x00,0x08,0x24,0x76,0x87,0x03,0x02,0x40,0xE0,0x00,0x02,0x03,
 100                                                          0x3F,0x22,0xF2,0x02,0x02,0x02,0x02,0x02,0x12,0x62,0x82,0x05,0x18,0x30,0x10,0x00,
 101                                                          0x00,0x00,0x04,0x07,0x06,0x06,0x0C,0xFF,0x08,0x18,0x1A,0x13,0x33,0x33,0x63,0xFF,
 102                                  0x03,0x03,0x03,0x03,0x03,0x7F,0x03,0x03,0x03,0x03,0x03,0x03,0xE0,0x3F,0x07,0x00,
 103                                                          0x00,0x00,0x00,0x00,0x00,0x00,0x18,0xFC,0x00,0x00,0x00,0x80,0x00,0x00,0x18,0xE0,
 104                                                          0x00,0x00,0x00,0x08,0x1C,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0xF8,0x00};/*"链",0*//* (32 X 
             -32 , 宋体 )*/
 105          
 106          
 107          
 108          uchar code hz5[ ]=      {0x00,0x00,0x00,0x08,0x06,0x07,0x03,0x02,0x00,0x00,0x30,0x18,0x1C,0x0C,0x09,0x01,
 109                                   0x01,0x01,0x02,0x02,0x06,0x6E,0x1C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x04,0x01,0x00,
 110                                                           0x00,0x00,0x00,0x00,0x3F,0x30,0x30,0x30,0x30,0x33,0x33,0xB3,0xB3,0xB3,0x33,0x33,
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 3   

 111                                                           0x33,0x32,0x32,0x32,0x32,0x36,0x26,0x05,0x0C,0x08,0x18,0x30,0x60,0xC0,0x00,0x00,
 112                                                           0x00,0x00,0x00,0x00,0xF0,0x30,0x20,0x23,0x23,0x23,0x23,0x21,0x21,0x21,0x21,0x21,
 113                                   0x31,0x31,0x31,0x31,0x33,0x23,0x03,0x03,0x80,0x40,0x60,0x30,0x31,0x10,0x00,0x00,
 114                                                           0x00,0x00,0x00,0x18,0x18,0x10,0x10,0x10,0x90,0x10,0x10,0x10,0x10,0x10,0x10,0x10,
 115                                                           0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0xF0,0x70,0x20,0x00}; /*"测",0*/ /* (32
             - X 32 , 宋体 )*/
 116          
 117          
 118          uchar code hz6[ ]=           {0x00,0x00,0x00,0x00,0x08,0x0C,0x07,0x03,0x03,0x01,0x00,0x00,0x00,0x01,0x7F,0x03,
 119                                    0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x01,0x00,0x00,
 120                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x1F,0x00,0x00,0x00,0x80,0x00,
 121                                                            0x0F,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x30,0x61,0xDF,0x8E,0x80,0x00,0x00,0x00,
 122                                                            0x00,0x00,0x00,0x06,0x07,0x06,0x06,0x06,0x06,0x06,0xFF,0x06,0x06,0x06,0x06,0x1E,
 123                                    0xE2,0x82,0x83,0x83,0x81,0x81,0x81,0x80,0x98,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,
 124                                                            0x00,0x00,0x00,0x00,0xC0,0x60,0x30,0x30,0x08,0x1C,0xE0,0x00,0x00,0x00,0x00,0x00,
 125                                                            0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x84,0xC4,0x64,0x64,0x34,0x1C,0x0C,0x04,0x00}; /*"试",0*/ /* (3
             -2 X 32 , 宋体 )*/
 126          
 127          
 128          uchar code hz7[ ]=           {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x03,0x03,0x07,0x05,0x09,0x09,
 129                                    0x11,0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,
 130                                                            0x00,0x00,0x40,0x70,0xE0,0xC0,0xC0,0x80,0x80,0x04,0x02,0x82,0x82,0x01,0x01,0x01,
 131                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x81,0x83,0x8C,0x98,0x60,0x00,
 132                                                            0x00,0x00,0x00,0x40,0x60,0x30,0x30,0x18,0x18,0x18,0x00,0x00,0x01,0x01,0x01,0x83,
 133                                    0x83,0xC6,0x46,0x6C,0x2C,0x38,0x18,0x3C,0x66,0xC3,0x81,0x00,0x00,0x00,0x00,0x00,
 134                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0xF0,0xE0,0xC0,0xC0,0x80,0x80,0x00,0x00,
 135                                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0x7E,0x38,0x00,0x00};/*"仪",0*//* (32 
             -X 32 , 宋体 )*/
 136          
 137          
 138          
 139          
 140          
 141          uchar code char1[ ]=    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x1F,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 142                                   0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x03,0x1F,0x00,0x00,0x00,0x00,0x00,
 143                                                           0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,
 144                                                           0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xE0,0xFC,0x00,0x00,0x00,0x00,0x00};/*"1",0*/ /* (16 X
             - 32 , 宋体, 加粗 )*/
 145          
 146          
 147          uchar code char2[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x0C,0x18,0x30,0x30,0x38,0x38,0x00,0x00,0x00,
 148                                    0x00,0x00,0x00,0x01,0x03,0x06,0x0C,0x18,0x30,0x3F,0x3F,0x00,0x00,0x00,0x00,0x00,
 149                                                            0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x3C,0x1C,0x0E,0x0E,0x0E,0x0E,0x0E,0x1C,0x18,
 150                                                            0x30,0x60,0xC0,0x80,0x00,0x06,0x06,0x06,0x0E,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00};/*"2",0*//* (16 X
             - 32 , 宋体, 加粗 )*/
 151          
 152          
 153          uchar code char3[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1C,0x38,0x38,0x38,0x38,0x00,0x00,0x00,0x03,
 154                                    0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x38,0x38,0x1C,0x07,0x00,0x00,0x00,0x00,0x00,
 155                                                            0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x78,0x38,0x1C,0x1C,0x1C,0x1C,0x38,0x70,0xE0,
 156                                                            0x78,0x1C,0x0C,0x0E,0x0E,0x0E,0x0E,0x0C,0x1C,0x38,0xE0,0x00,0x00,0x00,0x00,0x00};/*"3",0*/
 157          
 158          
 159          uchar code char4[ ]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x03,0x06,0x0E,0x0C,0x1C,
 160                                   0x18,0x30,0x70,0x7F,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 161                                   0x00,0x00,0x00,0x00,0x00,0x00,0x70,0xF0,0xF0,0xF0,0xF0,0x70,0x70,0x70,0x70,0x70,
 162                                   0x70,0x70,0x70,0xFE,0xFE,0x70,0x70,0x70,0x70,0x70,0x70,0x00,0x00,0x00,0x00,0x00};
             -/*"4",0*/
 163          
 164          
 165          
 166          
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 4   

 167          
 168          
 169          
 170          
 171          
 172          void delayms(uchar ms)
 173               { uchar count,i;
 174   1             _nop_();
 175   1             _nop_();
 176   1             _nop_();
 177   1             for(i=ms;i>0;i--)
 178   1               { for(count=0;count<=58;count++) {;}
 179   2                 _nop_();
 180   2               }
 181   1            }
 182          
 183                  void WriteCommand(uchar Command)   //send command    
 184                  {   
 185   1                  lcd_wr = 1;                   // init all control signal    
 186   1                  lcd_rd = 1;   
 187   1                  lcd_a0  = 1;                // for command    
 188   1                  //P2 = Command; 
 189   1                      sendbyte(Command) ;  
 190   1                  lcd_cs = 0;                // enable the access    
 191   1                  _nop_();   
 192   1                  lcd_wr = 0;   
 193   1                  _nop_();   
 194   1                  _nop_();   
 195   1                  lcd_wr = 1;   
 196   1                  _nop_();   
 197   1                  lcd_cs = 1;                // disable the access    
 198   1                  delayms(1);   
 199   1              }   
 200                     
 201                     
 202                     
 203                  void WriteData(uchar DData)    //send display data    
 204                  {   
 205   1                  lcd_wr = 1;                // init all control signal    
 206   1                  lcd_rd = 1;   
 207   1                  lcd_a0  = 0;                // for diaplay data    
 208   1                  //P2 = DData; 
 209   1                      sendbyte(DData);  
 210   1                  lcd_cs = 0;                // enable the access    
 211   1                  _nop_();   
 212   1                  lcd_wr = 0;   
 213   1                  _nop_();   
 214   1                  _nop_();   
 215   1                  lcd_wr = 1;   
 216   1                  _nop_();   
 217   1                  lcd_cs = 1;                // disable the access    
 218   1                  _nop_();   
 219   1                  _nop_();   
 220   1              }   
 221          
 222          
 223          void LCD_Init(void)
 224          {
 225   1      WriteCommand(0x40);
 226   1         WriteData(0x30);
 227   1         WriteData(0x87);
 228   1         WriteData(0x07);
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 5   

 229   1         WriteData(0x27); 
 230   1         WriteData(0x32);     
 231   1         WriteData(0xef);
 232   1         WriteData(0x28); 
 233   1         WriteData(0x00);
 234   1      
 235   1       WriteCommand(0x44);
 236   1         WriteData(0x00);
 237   1         WriteData(0x00);
 238   1         WriteData(0xf0);
 239   1         WriteData(0xb0); 
 240   1         WriteData(0x04);     
 241   1         WriteData(0xf0);
 242   1         WriteData(0x00); 
 243   1         WriteData(0x00);
 244   1         WriteData(0x00); 
 245   1         WriteData(0x00);
 246   1      
 247   1      WriteCommand(0x5d);
 248   1         WriteData(0x07);
 249   1         WriteData(0x07);
 250   1      
 251   1      WriteCommand(0x4f);
 252   1      
 253   1      WriteCommand(0x5a);
 254   1         WriteData(0x01);
 255   1      
 256   1      WriteCommand(0x5b);
 257   1         WriteData(0x05);
 258   1      
 259   1      //WriteCommand(0x60);
 260   1         //WriteData(0x01);
 261   1      
 262   1      WriteCommand(0x46);
 263   1         WriteData(0x00);
 264   1         WriteData(0x00);
 265   1      
 266   1      WriteCommand(0x58);
 267   1         WriteData(0x00);
 268   1      
 269   1      WriteCommand(0x59);
 270   1         WriteData(0x04);
 271   1      }
 272          
 273          
 274          void LCD_Clear(uchar dat)
 275          {
 276   1       unsigned int i;
 277   1       unsigned int j;
 278   1       for(i=0;i<40;i++)
 279   1       {
 280   2       WriteCommand(0x46);
 281   2         WriteData(i);
 282   2         WriteData(0);
 283   2       WriteCommand(0x42);
 284   2       for(j=0;j<240;j++)
 285   2       {WriteData(dat);}
 286   2        }
 287   1      }
 288          
 289          
 290          
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 6   

 291          
 292          
 293          
 294          
 295          
 296          
 297          
 298          
 299          void LCD_Write32x32Char(uchar addx, uchar addy, uchar code *DData)
 300          {
 301   1       unsigned int i,j;
 302   1       unsigned int tmp=0;
 303   1       unsigned int k=0;
 304   1       for(i=addx;i<addx+4;i++)
 305   1       {
 306   2       WriteCommand(0x46);
 307   2         WriteData(i);
 308   2         WriteData(addy);
 309   2       WriteCommand(0x42);
 310   2       for(j=0+k*32;j<32+k*32;j++)
 311   2       {WriteData(DData[tmp+j]);}
 312   2       k++;
 313   2        }
 314   1      }
 315          
 316          
 317          
 318          
 319          void LCD_Write32x16Char(uchar addx, uchar addy, uchar code *DData)
 320          {
 321   1       unsigned int i,j;
 322   1       unsigned int tmp=0;
 323   1       unsigned int k=0;
 324   1       for(i=addx;i<addx+2;i++)
 325   1       {
 326   2       WriteCommand(0x46);
 327   2         WriteData(i);
 328   2         WriteData(addy);
 329   2       WriteCommand(0x42);
 330   2       for(j=0+k*32;j<32+k*32;j++)
 331   2       {WriteData(DData[tmp+j]);}
 332   2       k++;
 333   2        }
 334   1      }
 335          
 336          
 337           
 338          void LCD_Write32x16Char1(uchar addx, uchar addy, uchar code *DData, uchar m)
 339          {unsigned int i,j;
 340   1       unsigned int tmp=m*64;
 341   1       unsigned int k=0;
 342   1       for(i=addx;i<addx+2;i++)
 343   1       {
 344   2       WriteCommand(0x46);
 345   2         WriteData(i);
 346   2         WriteData(addy);
 347   2       WriteCommand(0x42);
 348   2       for(j=0+k*32;j<32+k*32;j++)
 349   2       {WriteData(DData[tmp+j]);}
 350   2       k++;
 351   2        }
 352   1      }
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 7   

 353          
 354           void init_timer1()
 355          {
 356   1         P4SW=0xff;
 357   1         TMOD|=0X10;
 358   1         TH1=0x15;                            //如果时间要完全精确，需用12MHZ的晶振
 359   1         TL1=0xA0;
 360   1         EA=1;
 361   1         ET1=1;
 362   1         TR1=1;
 363   1      }
 364          
 365          
 366          void   LCD_Char_display(void)
 367                 {
 368   1      
 369   1         WriteCommand(0x46);
 370   1         WriteData(0x00);
 371   1         WriteData(0x00);
 372   1      
 373   1         LCD_Write32x32Char(107,1,hz1);
 374   1         LCD_Write32x32Char(112,1,hz2);
 375   1         LCD_Write32x32Char(117,1,hz3);
 376   1         LCD_Write32x32Char(122,1,hz4);
 377   1         LCD_Write32x32Char(127,1,hz5);
 378   1         LCD_Write32x32Char(132,1,hz6);
 379   1         LCD_Write32x32Char(137,1,hz7);
 380   1      
 381   1      
 382   1         LCD_Write32x16Char(115,6,charA); 
 383   1         LCD_Write32x16Char(135,6,charB);
 384   1      
 385   1      
 386   1         LCD_Write32x16Char(225,11,char1);
 387   1         LCD_Write32x16Char(33,18,char2);
 388   1         LCD_Write32x16Char(97,24,char3);
 389   1         LCD_Write32x16Char(161,30,char4);
 390   1         
 391   1                      /*
 392   1              LCD_Write32x16Char1(232,11,numb,timer1a.sec/10);
 393   1              LCD_Write32x16Char1(234,11,numb,timer1a.sec%10);
 394   1              LCD_Write32x16Char1(236,11,numb,timer1a.hsec/10);
 395   1              //LCD_Write16x8Char(48,13,dot);
 396   1                      LCD_Write32x16Char1(238,11,numb,10);
 397   1              LCD_Write32x16Char1(240,11,numb,timer1a.hsec%10);
 398   1                       
 399   1              LCD_Write32x16Char1(250,11,numb,timer1b.sec/10);
 400   1              LCD_Write32x16Char1(252,11,numb,timer1b.sec%10);
 401   1              LCD_Write32x16Char1(254,11,numb,timer1b.hsec/10);
 402   1              //LCD_Write16x8Char(63,13,dot);
 403   1                      LCD_Write32x16Char1(0,12,numb,10);
 404   1              LCD_Write32x16Char1(2,12,numb,timer1b.hsec%10);
 405   1      
 406   1      
 407   1                      LCD_Write32x16Char1(40,18,numb,timer2a.sec/10);
 408   1              LCD_Write32x16Char1(42,18,numb,timer2a.sec%10);
 409   1              LCD_Write32x16Char1(44,18,numb,timer2a.hsec/10);
 410   1              //LCD_Write16x8Char(136,20,dot);
 411   1                      LCD_Write32x16Char1(46,18,numb,10);
 412   1              LCD_Write32x16Char1(48,18,numb,timer2a.hsec%10);
 413   1                      
 414   1                      LCD_Write32x16Char1(58,18,numb,timer2b.sec/10);
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 8   

 415   1              LCD_Write32x16Char1(60,18,numb,timer2b.sec%10);
 416   1              LCD_Write32x16Char1(62,18,numb,timer2b.hsec/10);
 417   1              //LCD_Write16x8Char(151,20,dot);
 418   1                       LCD_Write32x16Char1(64,18,numb,10);
 419   1              LCD_Write32x16Char1(66,18,numb,timer2b.hsec%10);
 420   1      
 421   1      
 422   1      
 423   1                  LCD_Write32x16Char1(104,24,numb,timer3a.sec/10);
 424   1              LCD_Write32x16Char1(106,24,numb,timer3a.sec%10);
 425   1              LCD_Write32x16Char1(108,24,numb,timer3a.hsec/10);
 426   1              //LCD_Write16x8Char(8,28,dot);
 427   1                      LCD_Write32x16Char1(110,24,numb,10);
 428   1              LCD_Write32x16Char1(112,24,numb,timer3a.hsec%10);
 429   1                      
 430   1                      LCD_Write32x16Char1(122,24,numb,timer3b.sec/10);
 431   1              LCD_Write32x16Char1(124,24,numb,timer3b.sec%10);
 432   1              LCD_Write32x16Char1(126,24,numb,timer3b.hsec/10);
 433   1                      LCD_Write32x16Char1(128,24,numb,10);
 434   1              LCD_Write32x16Char1(130,24,numb,timer3b.hsec%10);
 435   1      
 436   1      
 437   1                      LCD_Write32x16Char1(168,30,numb,timer4a.sec/10);
 438   1              LCD_Write32x16Char1(170,30,numb,timer4a.sec%10);
 439   1              LCD_Write32x16Char1(172,30,numb,timer4a.hsec/10);
 440   1              //LCD_Write16x8Char(8,28,dot);
 441   1                      LCD_Write32x16Char1(174,30,numb,10);
 442   1              LCD_Write32x16Char1(176,30,numb,timer4a.hsec%10);
 443   1      
 444   1                      LCD_Write32x16Char1(186,30,numb,timer4b.sec/10);
 445   1              LCD_Write32x16Char1(188,30,numb,timer4b.sec%10);
 446   1              LCD_Write32x16Char1(190,30,numb,timer4b.hsec/10);
 447   1                      LCD_Write32x16Char1(192,30,numb,10);
 448   1              LCD_Write32x16Char1(194,30,numb,timer4b.hsec%10);
 449   1                      */
 450   1      
 451   1         WriteCommand(0x46);
 452   1         WriteData(0x10);
 453   1         WriteData(0x26);     
 454   1         
 455   1                
 456   1                }
 457          
 458          void timer1() interrupt 3 using 2
 459          {
 460   1      /******************刷新显示*****************************/  
 461   1         CLK_DIV=0X00;
 462   1         TH1=0x15;                            //如果时间要完全精确，需用12MHZ的晶振
 463   1         TL1=0xA0;
 464   1      /*******************如果全显示标志为1，所有显示刷新并清屏***********/
 465   1         if(dis_all)
 466   1         {
 467   2         TR1=0;
 468   2         ET1=0;
 469   2         LCD_Clear(0x00);
 470   2         LCD_Clear(0x00);
 471   2         LCD_Char_display();
 472   2         LCD_Char_display();
 473   2         dis_all=0;
 474   2         dis_fresh=1;   
 475   2         TR0=1;
 476   2         }
C51 COMPILER V9.00   TIMER1                                                                09/21/2014 16:12:55 PAGE 9   

 477   1      
 478   1         
 479   1        } 
 480             


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1044    ----
   CONSTANT SIZE    =   1344    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
