C51 COMPILER V7.06   TEMPCONTROL                                                           09/27/2011 17:02:50 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE TEMPCONTROL
OBJECT MODULE PLACED IN TEMPcontrol.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TEMPcontrol.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include <STC12C5A.h>
   2          #include<intrins.h>
   3          #include<math.h>
   4          #include<string.h>
   5          
   6          #define uchar unsigned char     
   7          #define uint unsigned int
   8          #define ulong unsigned long
   9          
  10          
  11          sbit DS=P2^7;                                   //定义温度DS18B20接口
  12          sbit heating_1=P1^3;
  13          sbit heating_2=P1^7;
  14          sbit heating_3=P2^5;
  15          sbit heating_4=P4^6;
  16          
  17          
  18          uchar code COM_1[]={0x02,0x00,0x00,0x02,0xE5,0xBA,0xB2,0x28};
  19          uchar code COM_2[]={0x35,0x00,0x00,0x02,0xE5,0x9B,0xA1,0x28};
  20          uchar code COM_3[]={0xFF,0x00,0x00,0x02,0xE5,0xBF,0x67,0x28};
  21          uchar code COM_4[]={0x1B,0x00,0x00,0x02,0xE5,0xE4,0xE2,0x28};
  22          
  23          /******************************延时函数*******************************************
  24          *          
  25          **********************************************************************************/
  26          void delay(uint z)
  27          {
  28   1              uint x,y;
  29   1              for(x=2000;x>1;x--)
  30   1              {
  31   2                      for(y=z;y>1;y--);
  32   2              }
  33   1      }
  34          
  35          /******************************微延时函数*****************************************
  36          *          
  37          **********************************************************************************/
  38          void tmp_delay(uint z)
  39          {
  40   1              while(z--);
  41   1      }
  42          
  43          
  44          
  45          /******************************DS18B20芯片****************************************
  46          *               初始化
  47          *         读一个字节
  48          *         写一个字节
  49          **********************************************************************************/
  50          void DS_init()                           //初始化DS18B20
  51          {
  52   1              DS=1;                                  //DS复位
  53   1              tmp_delay(10);                         //稍做延时
  54   1              DS=0;                                  //单片机将DS拉低
  55   1              delay(1);                              //精确延时 大于 480us
C51 COMPILER V7.06   TEMPCONTROL                                                           09/27/2011 17:02:50 PAGE 2   

  56   1              DS=1;                                  //拉高总线
  57   1              tmp_delay(20);
  58   1      }
  59          
  60          uchar read_DS()
  61          {
  62   1              uchar i=0;
  63   1              uchar dat=0;
  64   1              for(i=8;i>0;i--)
  65   1              {
  66   2                      DS=0;                                 //给脉冲信号
  67   2                      dat>>=1;
  68   2                      DS=1;                                 //给脉冲信号
  69   2                      if(DS)
  70   2                      dat|=0x80;
  71   2                      tmp_delay(4);
  72   2              }
  73   1              return(dat);                            //返回值高位在左，低位在右
  74   1      }
  75          
  76          void write_DS(uchar dat)                  //由右至左写入一字节
  77          {
  78   1              uchar i=0;
  79   1              for(i=8; i>0; i--)
  80   1              {
  81   2                      DS=0;
  82   2                      DS=dat&0x01;
  83   2                      tmp_delay(5);
  84   2                      DS=1;
  85   2                      dat>>=1;
  86   2              }
  87   1      }
  88          
  89          void th_tl(uchar serial[])    //设置高低温限
  90          {
  91   1              uchar i;
  92   1              DS_init();
  93   1              write_DS(0x55);             //发出 MATCH ROM 命令
  94   1              for(i=0;i<8;i++)
  95   1              {
  96   2                      write_DS(serial[7-i]);    //发出DS18B20的 COM 序列
  97   2              }
  98   1              write_DS(0x4E);             //写入高低温告警温度
  99   1              write_DS(0x7D);                   //高温 125℃
 100   1              write_DS(0x14);                   //低温 20 ℃
 101   1      }
 102          
 103          void alarm_search()
 104          {
 105   1              uchar i=1,j,c;
 106   1              uchar tag_old,tag_new,sensor_count;
 107   1              bit scan_over,b;
 108   1              uchar serial[8];
 109   1              xdata uchar snn[4][8]={0x00};
 110   1              
 111   1              sensor_count=0;
 112   1              scan_over=0;
 113   1              tag_old=0;
 114   1              for(;scan_over==0;)
 115   1              {
 116   2                      i=1;
 117   2                      tag_new=0;                      //scan_start
C51 COMPILER V7.06   TEMPCONTROL                                                           09/27/2011 17:02:50 PAGE 3   

 118   2                      
 119   2                      DS_init();
 120   2                      delay(1);               
 121   2                      write_DS(0xEC);                    //发出 ALARM SEARCH 命令
 122   2                      do
 123   2                      {
 124   3                              c=0;
 125   3                              DS=0;                                 //读1bit
 126   3                              _nop_();_nop_();
 127   3                              DS=1;
 128   3                              if(DS) c|=0x02;
 129   3                              tmp_delay(6);
 130   3                              DS=0;                                 //读1bit补码
 131   3                              _nop_();_nop_();
 132   3                              DS=1;
 133   3                              if(DS) c|=0x01;
 134   3                              tmp_delay(6);   
 135   3                              
 136   3                              switch (c)
 137   3                              {
 138   4                                      case 0x00:                //此位冲突
 139   4                                              if(i<tag_old)           //未到达标TAG_OLD,向TAG_OLD走,如果是向左则标记新的TAG_NEW
 140   4                                              {
 141   5                                                      if (!((serial[(i-1)>>3]>>((i-1)%8))&0x01)) {b=0;tag_new=i;} else b=1;
 142   5                                              }
 143   4                                              if(i==tag_old) b=1;  //到达TAG_OLD,固定"1"
 144   4                                              if(i>tag_old)        //超过TAG_OLD,先选择"0",标记新的TAG_NEW 
 145   4                                              {
 146   5                                                      b=0;
 147   5                                                      tag_new=i;
 148   5                                              }
 149   4                                              break;
 150   4                                      case 0x01:                //此位为0 
 151   4                                              b=0;
 152   4                                              break;
 153   4                                      case 0x02:                //此位为1
 154   4                                              b=1;
 155   4                                              break;
 156   4                                      case 0x03:                //无传感器
 157   4                                              scan_over=1;
 158   4                                              i=64;
 159   4                                              break;
 160   4                                      default: break;
 161   4                              }
 162   3                              
 163   3                              DS=0;
 164   3                              _nop_();_nop_();
 165   3                              DS=b&0x01;
 166   3                              tmp_delay(6);
 167   3                              DS=1;
 168   3                              
 169   3                              serial[(i-1)>>3]=serial[(i-1)>>3] >> 1;
 170   3                              if (b) serial[(i-1)>>3] |= 0x80;
 171   3                                      else serial[(i-1)>>3] &= 0x7F;
 172   3                              i++;
 173   3                      }
 174   2                      while(i<=64);   
 175   2                      
 176   2                      tag_old=tag_new;
 177   2                      if(sensor_count<=3)
 178   2                              for(j=0;j<8;j++) snn[sensor_count][7-j]=serial[j];      //reord sensor addr
 179   2                      sensor_count++;
C51 COMPILER V7.06   TEMPCONTROL                                                           09/27/2011 17:02:50 PAGE 4   

 180   2                      if(tag_new==0) scan_over=1;
 181   2              }
 182   1        
 183   1              sensor_count=0;
 184   1              P3|=0xF0;
 185   1              if(!(strcmp(snn[0],COM_1)&&strcmp(snn[1],COM_1)&&strcmp(snn[2],COM_1)&&strcmp(snn[3],COM_1)))
 186   1                      P3&=0xEF;
 187   1              if(!(strcmp(snn[0],COM_2)&&strcmp(snn[1],COM_2)&&strcmp(snn[2],COM_2)&&strcmp(snn[3],COM_2)))
 188   1                      P3&=0xDF;
 189   1              if(!(strcmp(snn[0],COM_3)&&strcmp(snn[1],COM_3)&&strcmp(snn[2],COM_3)&&strcmp(snn[3],COM_3)))
 190   1                      P3&=0xBF;
 191   1              if(!(strcmp(snn[0],COM_4)&&strcmp(snn[1],COM_4)&&strcmp(snn[2],COM_4)&&strcmp(snn[3],COM_4)))
 192   1                      P3&=0x7F;                       
 193   1              sensor_count++;
 194   1      }
 195          
 196          /******************************读取并显示温度函数*********************************
 197          *          读取并显示DS18B20的温度值
 198          *          入口参数：DS18B20序列号、温度显示地址
 199          **********************************************************************************/
 200          void get_temp(uchar serial[])
 201          {
 202   1              uchar i;
 203   1              uchar t1=0;
 204   1              uchar t2=0;
 205   1              uint t=0;
 206   1              float tt=0;     
 207   1              uint shi,ge,xiaoshu;
 208   1      
 209   1              DS_init();
 210   1              write_DS(0x55);             //发出 MATCH ROM 命令
 211   1              for(i=0;i<8;i++)
 212   1              {
 213   2                      write_DS(serial[7-i]);    //发出DS18B20的 COM 序列
 214   2              }
 215   1              write_DS(0x44);           //发出温度变换命令
 216   1              delay(1);
 217   1              
 218   1              DS_init();
 219   1              write_DS(0x55);           //发出 MATCH ROM 命令
 220   1              for(i=0;i<8;i++)
 221   1              {
 222   2                      write_DS(serial[7-i]);    //发出DS18B20的 COM 序列
 223   2              }
 224   1              write_DS(0xBE);           //读取温度寄存器
 225   1              t1=read_DS();              //连续读两个字节数据   //读低8位 
 226   1              t2=read_DS();                                     //读高8位
 227   1              if(t2<0xF0)               //正温度
 228   1              {
 229   2                      t=t2;
 230   2                      t<<=8;
 231   2                      t=t|t1;                                 //两字节合成一个整型变量。
 232   2                      tt=t*0.0625;        //得到真实十进制温度值，因为DS18B20可以精确到0.0625度，所以读回数据的最低位代表的是0.
             -0625度
 233   2                      t=tt*10+0.5;          //放大十倍，这样做的目的将小数点后第一位也转换为可显示数字，同时进行一个四舍五入操作
             -。
 234   2                      shi=t/100;
 235   2                      ge=t/10%10;
 236   2                      xiaoshu=t%10;
 237   2              
 238   2              }
 239   1              else                    //负温度
C51 COMPILER V7.06   TEMPCONTROL                                                           09/27/2011 17:02:50 PAGE 5   

 240   1              {
 241   2                      t=t2;
 242   2                      t<<=8;
 243   2                      t=t|t1;                                 //两字节合成一个整型变量。
 244   2                      t=0xFFFF-t+1;         //得到温度的绝对值
 245   2                      tt=t*0.0625;        //得到真实十进制温度值，因为DS18B20可以精确到0.0625度，所以读回数据的最低位代表的是0.
             -0625度
 246   2                      t=tt*10+0.5;          //放大十倍，这样做的目的将小数点后第一位也转换为可显示数字，同时进行一个四舍五入操作
             -。
 247   2                      shi=t/100;
 248   2                      ge=t/10%10;
 249   2                      xiaoshu=t%10;
 250   2              
 251   2              }
 252   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1104    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----      32
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
